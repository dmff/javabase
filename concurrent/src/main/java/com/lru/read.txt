LRU:lastest recently use,"最少最近使用"，LRU缓存就是使用这种缓存原理
	简单理解就是：容器的大小容量是有限的，当超过时，移除过期数据后，然后添加

	实现LRU有两种选择：
		1.采用继承linkedhashmap，重写removeEldestEntry方法
		2.采用复合的方式，内部持有，
		3.自己设计数据结构，使用链表和hashmap
		4.直接在内部使用，重写方法，不用单独存在类中
		
		既然是做缓存使用必然是要解决线程安全的,EHCache 老版本的LRU实现就是基于LinkedHashMap+synchronized（LruMemoryStore）实现，
		不过这样的实现并发访问时很慢的，所以现在EHCache已经不推荐使用了，取而代之的是类似于ConcurrentHashMap的锁分段技术，
		不过论淘汰效率来说,没有比LinkedHashMap更快的了