单例模式：只有单一对象的实例，减少系统每次new消耗的资源
	构造方法私有化，外部不能直接创建；但是在不适用反射的前提下
	1.饿汉模式：不能实现懒加载，会消耗系统一定的资源；比较容易实现
	2.懒汉模式：延迟加载，只有使用的时候才回去创建对象
			1.锁住创建对象的方法，这种效率低
			2.使用双检锁--使用volatile修饰，禁止指令重排序,对象创建包括(分配地址-初始化-创建对象)
			3.静态内部类的方式：采用的类只会加载一次，并且类锁定的机制;只能锁定静态属性
			4.登记式的方式：这种方式实现复杂，需要使用map进行注册
	 3.使用枚举，简易；但是你使用实例方法，你就需要确保方法的线程安全性